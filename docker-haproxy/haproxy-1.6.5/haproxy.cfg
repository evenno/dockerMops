
#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log    127.0.0.1 local2 info #级别error
    chroot  /usr/local/haproxy
    pidfile  /var/run/haproxy.pid
        ###haproxy的pid存放路径,启动进程的用户必须有权限访问此文件 
    maxconn  4096         ###每个进程的最大连接数，默认4000
    user   haproxy   #用户组
    group   haproxy
    daemon  ###创建1个进程进入deamon模式运行。此参数要求将运行模式设置为"daemon"
    nbproc 1 #设置启动进程数，默认是1
#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will 
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode   http   ###默认的模式mode { tcp|http|health }，tcp是4层，http是7层，health只会返回OK
    log    global     ###采用全局定义的日志
    option  dontlognull  ###不记录健康检查的日志信息，日志不会记录空连接
    option  httpclose    ###每次请求完毕后主动关闭http通道 
    option  httplog      ###访问日志类别http日志格式 
    option  forwardfor   ###如果后端服务器需要获得客户端真实ip需要配置的参数，可以从Http Header中获得客户端ip  
    option abortonclose #当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接
    option  redispatch   ###当使用了cookie时，haproxy将会将请求的后端服务器的server id插入到cookie中，以保证会话的session持久性，而此时，如果后端服务器宕机，但是客户端的cookie是不会刷新的，如果设置此参数，将会将客户的请求强制定向到另外一个后端的server上继续会话。
    timeout connect 5000ms #default 10 second timeout if a backend is not found
    timeout client 500000  ###客户端连接超时
    timeout server 500000  ###服务器返回的响应时间
    maxconn    100000  ###最大连接数
    retries     3      ###。重试时间。3次连接失败就认为服务不可用，也可以通过后面设置 
####################################################################
listen stats
        mode http
        bind *:1080 #监听端口  
        stats refresh 30s #统计页面自动刷新时间  
        stats uri /stats #统计页面url  
        stats realm Haproxy Manager #统计页面密码框上提示文本  
        stats auth admin:admin #统计页面用户名和密码设置  
        #stats hide-version #隐藏统计页面上HAProxy的版本信息
#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
#frontend main *:5000    ##前端
#    acl url_static path_beg    -i /static /images /javascript /stylesheets
#    acl url_static path_end    -i .jpg .gif .png .css .js
#
#    use_backend static if url_static ###满足策略要求，则响应策略定义的backend页面
#    default_backend   app       ###不满足则响应backend的默认页面
frontend frontend-web.com
        bind *:80
        mode http
        option httplog
        log global
        default_backend backend-webgroup.com
#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
#backend static   ##后端server列表
#   balance     roundrobin           ###负载均衡模式轮询
#   server      static 127.0.0.1:4331 check ###后端服务器定义
backend backend-webgroup.com
        option forwardfor header X-REALL-IP #获取后端ip
        option httpchk HEAD / HTTP/1.0
        balance roundrobin #负载均衡算法：roundrobin：轮询 source:源ip hash    leastconn：最小连接数

        server web-node1 10.10.239.194:80 check inter 2000 rise 30 fall 15
        server web-node2 10.10.239.185:80 check inter 2000 rise 30 fall 15
# 健康检查分为4层和七层
#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
